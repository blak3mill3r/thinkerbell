import os, glob

SetOption( 'num_jobs', 4 )

env = Environment()

env['ENV'] = {'PATH':os.environ['PATH'], 'TERM':os.environ['TERM'], 'HOME':os.environ['HOME']} # Environment variables required by colorgcc.
env['LIBPATH'] = [ './', '/usr/local/lib', '/usr/local/cuda/lib/', '../lib' ]
env['CCFLAGS'] = [ '-Wno-deprecated' ] #'-Wall', '-W', '-Wshadow', '-Wpointer-arith', '-Wcast-qual', '-Wwrite-strings', '-Wconversion', '-Winline', '-Wredundant-decls', '-Wno-unused', '-Wno-deprecated' ]
env['CPPPATH'] = [ './', '/home/blake/w/cudamm/', '/home/blake/w/thinkerbell/', '/usr/include/cuda/', '/usr/include/wx-2.8' ]
env['LIBS'] = [ 'cudamm', 'cuda', 'boost_thread-mt', 'boost_serialization-mt', 'boost_program_options-mt', 'thinkerbell' ]
env.ParseConfig('wx-config --cflags --libs')

env.Program( 'mnist_handwritten_digits/train/train', source = glob.glob( 'mnist_handwritten_digits/train/*.cc' ) + glob.glob( 'mnist_handwritten_digits/train/*.cpp' ) )
#env.Program( 'mnist_handwritten_digits/visualize/visualize', source = glob.glob( 'mnist_handwritten_digits/visualize/*.cc' ) )

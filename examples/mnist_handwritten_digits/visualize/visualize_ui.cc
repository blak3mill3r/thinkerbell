// generated by Fast Light User Interface Designer (fluid) version 1.0300

#include "visualize_ui.h"
#include <iostream>
using namespace std;

void VisualizeUI::cb_example_i(Fl_Spinner* o, void*) {
  original->set_digit_image( &digit_images[28*28 * (int)o->value() ] );
original->redraw();
}
void VisualizeUI::cb_example(Fl_Spinner* o, void* v) {
  ((VisualizeUI*)(o->parent()->user_data()))->cb_example_i(o,v);
}

VisualizeUI::VisualizeUI( float * digit_images_ ) {
  { visualize_window = new Fl_Double_Window(880, 640);
    visualize_window->user_data((void*)(this));
    { Fl_Spinner* o = new Fl_Spinner(60, 1, 40, 24, "example");
      o->minimum(0);
      o->maximum(9999);
      o->value(0);
      o->callback((Fl_Callback*)cb_example);
    } // Fl_Spinner* o
    { original = new DigitWidget(16, 51, 28, 28, "original");
      original->box(FL_NO_BOX);
      original->color((Fl_Color)247);
      original->selection_color(FL_BACKGROUND_COLOR);
      original->labeltype(FL_NORMAL_LABEL);
      original->labelfont(0);
      original->labelsize(14);
      original->labelcolor(FL_FOREGROUND_COLOR);
      original->align(Fl_Align(FL_ALIGN_TOP));
      original->when(FL_WHEN_RELEASE);
    } // DigitWidget* original
    visualize_window->end();
  } // Fl_Double_Window* visualize_window
  digit_images = digit_images_;
}

void VisualizeUI::show(int argc, char** argv) {
  visualize_window->show(argc,argv);
}

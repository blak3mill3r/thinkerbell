// generated by Fast Light User Interface Designer (fluid) version 1.0300

#include "visualize_ui.h"
#include <iostream>
using namespace std;

void VisualizeUI::cb_example_spinner_i(Fl_Spinner* o, void*) {
  original->set_digit_image( &digit_images[28*28 * (int)o->value() ] );
original->redraw();

crunch_numbers();
}
void VisualizeUI::cb_example_spinner(Fl_Spinner* o, void* v) {
  ((VisualizeUI*)(o->parent()->user_data()))->cb_example_spinner_i(o,v);
}

void VisualizeUI::cb_again_i(Fl_Button*, void*) {
  crunch_numbers();
}
void VisualizeUI::cb_again(Fl_Button* o, void* v) {
  ((VisualizeUI*)(o->parent()->user_data()))->cb_again_i(o,v);
}

void VisualizeUI::crunch_numbers() {
  int examplei = (int)example_spinner->value();
float reconstruction_image[28*28];
float reconstruction_labels[16];

(*reconstruction_callback)( &digit_images[28*28*examplei], reconstruction_image, reconstruction_labels );
reconstruction->set_digit_image( reconstruction_image );
label_graph->set_labels( reconstruction_labels );
reconstruction->redraw();
label_graph->redraw();
}

VisualizeUI::VisualizeUI( float * digit_images_, void (*reconstruction_callback_)(float*, float*, float*) ) {
  { visualize_window = new Fl_Double_Window(175, 185);
    visualize_window->user_data((void*)(this));
    { example_spinner = new Fl_Spinner(60, 1, 40, 24, "example");
      example_spinner->minimum(0);
      example_spinner->maximum(9999);
      example_spinner->value(0);
      example_spinner->callback((Fl_Callback*)cb_example_spinner);
    } // Fl_Spinner* example_spinner
    { label_graph = new LabelWidget(0, 115, 128, 64, "opinion");
      label_graph->box(FL_NO_BOX);
      label_graph->color((Fl_Color)247);
      label_graph->selection_color(FL_BACKGROUND_COLOR);
      label_graph->labeltype(FL_NORMAL_LABEL);
      label_graph->labelfont(0);
      label_graph->labelsize(14);
      label_graph->labelcolor(FL_FOREGROUND_COLOR);
      label_graph->align(Fl_Align(FL_ALIGN_TOP));
      label_graph->when(FL_WHEN_RELEASE);
    } // LabelWidget* label_graph
    { original = new DigitWidget(16, 51, 28, 28, "original");
      original->box(FL_NO_BOX);
      original->color((Fl_Color)247);
      original->selection_color(FL_BACKGROUND_COLOR);
      original->labeltype(FL_NORMAL_LABEL);
      original->labelfont(0);
      original->labelsize(14);
      original->labelcolor(FL_FOREGROUND_COLOR);
      original->align(Fl_Align(FL_ALIGN_TOP));
      original->when(FL_WHEN_RELEASE);
    } // DigitWidget* original
    { reconstruction = new DigitWidget(76, 51, 28, 28, "fantasy");
      reconstruction->box(FL_NO_BOX);
      reconstruction->color((Fl_Color)247);
      reconstruction->selection_color(FL_BACKGROUND_COLOR);
      reconstruction->labeltype(FL_NORMAL_LABEL);
      reconstruction->labelfont(0);
      reconstruction->labelsize(14);
      reconstruction->labelcolor(FL_FOREGROUND_COLOR);
      reconstruction->align(Fl_Align(FL_ALIGN_TOP));
      reconstruction->when(FL_WHEN_RELEASE);
    } // DigitWidget* reconstruction
    { Fl_Button* o = new Fl_Button(105, 5, 64, 20, "again");
      o->callback((Fl_Callback*)cb_again);
    } // Fl_Button* o
    visualize_window->end();
  } // Fl_Double_Window* visualize_window
  digit_images = digit_images_;
  reconstruction_callback = reconstruction_callback_;
}

void VisualizeUI::show(int argc, char** argv) {
  visualize_window->show(argc,argv);
}

TODO
momentum
  new mem space weight_deltas, 3-buffers, still 3 for weight buffers too
  posprods (probability-deltas?)
  positive probability deltas:
    positive phase does this to weight-delta bufc
      weight_update, replacing contents of bufc
    negative phase, weight delta bufc
      weight_update, subtracting from contents
      divide result by batch_size
      

weight decay:
  weightcost*weights is subtracted from ((net weight deltas)/batch_size)

divide weight updates by batch_size
add a rms error kernel
  element wise sum of (reality-fantasy)^2


















biases_memory_layout_map could be simplified to map<Vertex,int>
maybe weights_memory_layout_map too

little things
name changes
  vertex_ptr -> neurons_ptr
  DeepBeliefNetwork* -> DBN*
move all the DBN* classes into a namespace deep_belief_network



a picture of triple-buffering:

           |---|   |
           |   |   |
           | A |---|
           |   |   |
           |---| B |
           |   |   |
           | C |---|
           |   |   |
           |---| A |
           |   |   |
           | B |---|
           |   |   |
   t0   -->|---| C |
           |   |   |
           | A |---|<--    t1
           |   |   |
   t2   -->|---| B |
           |   |   |
           | C |---|
           |   |   |


at t0
synch with A-exec-finished in other stream
up activate through graph
synch with C-exec-finished in other stream
positive weight adjust step, weights-C = weights-B + delta
2 ags steps
negative weight adjust step, weights-C = weights-C - delta
record A-exec-finished

at t1
synch with B-exec-finished in other stream
up activate through graph
synch with A-exec-finished in other stream
positive weight adjust step, weights-A = weights-C + delta
2 ags steps
negative weight adjust step, weights-A = weights-A - delta
record B-exec-finished


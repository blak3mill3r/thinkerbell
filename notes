Good stuff came with
learning rate .01 for like 16 seconds on layer ab
and then .0005 for a while

initial weight distribution is really important, think it's goodish at mean=0 sigma=0.1




what's wrong is
when I do the negative bias delta adjusment
top vertex has binary vals not probabilities
NEED the probabilities to do the negative bias delta adjustment for the top vertex properly
IOW we need a temporary memory space for just the top bias deltas



TODO
momentum
  DONE new mem space weight_deltas, 3-buffers, still 3 for weight buffers too
       positive probability deltas:
         before positive phase:
  DONE     weight-delta-bufc element-wise reading bufb               f(x) = x' * momentum
  DONE     bias-delta-bufc element-wise reading bufb                 f(x) = x' * momentum
         positive phase:
  DONE     weight_adjustment, adding to contents of weight-delta-bufc:   f(x) = x + epsilonw*pos-probability-delta/batch_size
  DONE     bias_adjustment adding to contents of bias-delta-bufc         f(x) = x + epsilonvb*reality-batch/batch_size
         negative phase:
  DONE     weight_adjustment, subtracting from weight-delta-bufc:        f(x) = x - epsilonw*neg-probability-deltas/batch_size
  DONE     bias_adjustment subtracting from bias-delta-bufc              f(x) = x - epsilonvb*fantasy-batch/batch_size
         error kernel: element wise sum of (reality-fantasy)^2
         update
  DONE     weight decay, subtracting from contents of weight-delta-bufc, using weights-bufc  f(x) = x - epsilonw*weightcost*weight
  DONE     weight update, weight-bufc = weight-bufb + weight-delta-bufc
  DONE     bias update, bias-bufc = bias-bufb + bias-delta-bufc   
      











biases_memory_layout_map could be simplified to map<Vertex,int>
maybe weights_memory_layout_map too

little things
name changes
  vertex_ptr -> neurons_ptr
  DeepBeliefNetwork* -> DBN*
move all the DBN* classes into a namespace deep_belief_network



a picture of triple-buffering:

           |---|   |
           |   |   |
           | A |---|
           |   |   |
           |---| B |
           |   |   |
           | C |---|
           |   |   |
           |---| A |
           |   |   |
           | B |---|
           |   |   |
   t0   -->|---| C |
           |   |   |
           | A |---|<--    t1
           |   |   |
   t2   -->|---| B |
           |   |   |
           | C |---|
           |   |   |


at t0
synch with A-exec-finished in other stream
up activate through graph
synch with C-exec-finished in other stream
positive weight adjust step, weights-C = weights-B + delta
2 ags steps
negative weight adjust step, weights-C = weights-C - delta
record A-exec-finished

at t1
synch with B-exec-finished in other stream
up activate through graph
synch with A-exec-finished in other stream
positive weight adjust step, weights-A = weights-C + delta
2 ags steps
negative weight adjust step, weights-A = weights-A - delta
record B-exec-finished

